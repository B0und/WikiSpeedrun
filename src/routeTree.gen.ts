/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as StatsRouteImport } from './routes/stats'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as AchievementsRouteImport } from './routes/achievements'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WikiSplatRouteImport } from './routes/wiki.$'

const StatsRoute = StatsRouteImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AchievementsRoute = AchievementsRouteImport.update({
  id: '/achievements',
  path: '/achievements',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiSplatRoute = WikiSplatRouteImport.update({
  id: '/wiki/$',
  path: '/wiki/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/achievements': typeof AchievementsRoute
  '/settings': typeof SettingsRoute
  '/stats': typeof StatsRoute
  '/wiki/$': typeof WikiSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/achievements': typeof AchievementsRoute
  '/settings': typeof SettingsRoute
  '/stats': typeof StatsRoute
  '/wiki/$': typeof WikiSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/achievements': typeof AchievementsRoute
  '/settings': typeof SettingsRoute
  '/stats': typeof StatsRoute
  '/wiki/$': typeof WikiSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/achievements'
    | '/settings'
    | '/stats'
    | '/wiki/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/achievements' | '/settings' | '/stats' | '/wiki/$'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/achievements'
    | '/settings'
    | '/stats'
    | '/wiki/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AchievementsRoute: typeof AchievementsRoute
  SettingsRoute: typeof SettingsRoute
  StatsRoute: typeof StatsRoute
  WikiSplatRoute: typeof WikiSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/achievements': {
      id: '/achievements'
      path: '/achievements'
      fullPath: '/achievements'
      preLoaderRoute: typeof AchievementsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stats': {
      id: '/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki/$': {
      id: '/wiki/$'
      path: '/wiki/$'
      fullPath: '/wiki/$'
      preLoaderRoute: typeof WikiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/achievements' {
  const createFileRoute: CreateFileRoute<
    '/achievements',
    FileRoutesByPath['/achievements']['parentRoute'],
    FileRoutesByPath['/achievements']['id'],
    FileRoutesByPath['/achievements']['path'],
    FileRoutesByPath['/achievements']['fullPath']
  >
}
declare module './routes/settings' {
  const createFileRoute: CreateFileRoute<
    '/settings',
    FileRoutesByPath['/settings']['parentRoute'],
    FileRoutesByPath['/settings']['id'],
    FileRoutesByPath['/settings']['path'],
    FileRoutesByPath['/settings']['fullPath']
  >
}
declare module './routes/stats' {
  const createFileRoute: CreateFileRoute<
    '/stats',
    FileRoutesByPath['/stats']['parentRoute'],
    FileRoutesByPath['/stats']['id'],
    FileRoutesByPath['/stats']['path'],
    FileRoutesByPath['/stats']['fullPath']
  >
}
declare module './routes/wiki.$' {
  const createFileRoute: CreateFileRoute<
    '/wiki/$',
    FileRoutesByPath['/wiki/$']['parentRoute'],
    FileRoutesByPath['/wiki/$']['id'],
    FileRoutesByPath['/wiki/$']['path'],
    FileRoutesByPath['/wiki/$']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AchievementsRoute: AchievementsRoute,
  SettingsRoute: SettingsRoute,
  StatsRoute: StatsRoute,
  WikiSplatRoute: WikiSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
